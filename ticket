#!/bin/bash

######################################################
## Simple program to create a ticket (issue, bug)   ##
## in a plain text file in git root directery       ##
######################################################

directory="tickets/"
labels=("bug" "enhancement" "documentation")


## Exit if we are not in git repository
repository=$(git rev-parse --is-inside-work-tree 2> /dev/null)
if [ "$repository" != "true" ]
then
	echo "Not in a git repository."
	echo "Exit"
	exit 1
fi
	
## Search git top level directory, cd to it.
cd "$(git rev-parse --show-toplevel)"

# TODOâ€¯search for conf file, and grab tickets location and labels from it, otherwise use <git_root>/tickets


## Set current git email as author
author=$(git config user.email)

## Prompt user for ticket title
read -p 'Title: ' title

## Promt user for ticket description
read -p 'Description: ' description


## Prompt user for ticket label
PS3="Select ticket label: "
select label in "${labels[@]}"
do
    if [ 1 -le "$REPLY" ] && [ "$REPLY" -le "${#labels[@]}" ]
    then
        echo "Label $label selected."
        break
    fi
    echo "Wrong selection, try again"
done

## Create tickets directory if necessary
mkdir -p $directory

## Set ticket ID as UUID first 8 chars (for readability)
## Check if file exists, if so try another uuid. 
free=false
until [ $free == true ]
do
    id=$(uuidgen | cut -c1-8 | awk '{ print tolower($0) }')
    ticketpath=$directory$id
    if [ ! -e $ticketpath ]; then
        free=true
    fi

done

## Save ticket
echo "ticket: $id" > $ticketpath
echo "author: $author" >> $ticketpath
echo "status: open" >> $ticketpath
echo "label: $label" >> $ticketpath
echo "title: $title" >> $ticketpath
echo "-----------" >> $ticketpath
echo "" >> $ticketpath
echo "$description" >> $ticketpath

## Show result
echo ""
echo ""
echo "Ticket saved as $id"
echo ""
cat $ticketpath
echo ""

